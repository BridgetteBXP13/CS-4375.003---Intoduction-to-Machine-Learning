Naive Bayes
df <- read.csv("covtype.csv")
i <- sample(1:nrow(df), nrow(df)*.80, replace=FALSE)
train <- df[i,]
test <- df[-i,]
head(train)
tail(train)
median(train$class)
mode(train$cap.color)
str(train)
hist(train$Elevation)
slices <- c(sum(train$Wilderness_Area1==1, na.rm=TRUE), sum(train$Wilderness_Area2==1, na.rm=TRUE), sum(train$Wilderness_Area3==1, na.rm=TRUE), sum(train$Wilderness_Area4==1, na.rm=TRUE))
labls <- c("Wilds 1","Wilds 2","Wilds 3","Wilds 4")
pie(slices,labels = labls, main="Types of Wild Area", col=c("green", "blue", "yellow", "red"))
glm1 <- glm(Slope~Elevation, data=train, family=poisson())
summary(glm1)
library(e1071)
hist(train$Elevation)
hist(train$Soil_Type)
slices <- c(sum(train$Wilderness_Area1==1, na.rm=TRUE), sum(train$Wilderness_Area2==1, na.rm=TRUE), sum(train$Wilderness_Area3==1, na.rm=TRUE), sum(train$Wilderness_Area4==1, na.rm=TRUE))
labls <- c("Wilds 1","Wilds 2","Wilds 3","Wilds 4")
pie(slices,labels = labls, main="Types of Wild Area", col=c("green", "blue", "yellow", "red"))
df <- read.csv("covtype.csv")
i <- sample(1:nrow(df), nrow(df)*.80, replace=FALSE)
train <- df[i,]
test <- df[-i,]
head(train)
tail(train)
median(train$class)
mode(train$cap.color)
str(train)
hist(train$Elevation)
hist(train$Soil_Type)
slices <- c(sum(train$Wilderness_Area1==1, na.rm=TRUE), sum(train$Wilderness_Area2==1, na.rm=TRUE), sum(train$Wilderness_Area3==1, na.rm=TRUE), sum(train$Wilderness_Area4==1, na.rm=TRUE))
labls <- c("Wilds 1","Wilds 2","Wilds 3","Wilds 4")
pie(slices,labels = labls, main="Types of Wild Area", col=c("green", "blue", "yellow", "red"))
tree_type1 <- df
tree_type1$Cover_Type <- as.factor(ifelse (tree_type1$Cover_Type=="1",1,0))
fun <- function(dataf){
glm1 <- glm(Cover_Type~., data=train, family=poisson())
probs <- predict(glm1, newdata=test)
pred <- ifelse(probs>0.5, 1, 0)
acc <- mean(pred==test$Cover_Type)
print(paste("accuracy = ", acc))
table(pred, test$Cover_Type)
}
fun(tree_type1)
#glm1 <- glm(Slope~Elevation, data=train, family=poisson())
#summary(glm1)
library(e1071)
nb1 <- naiveBayes(Slope~., data=train)
nb1
tree_type1 <- df
tree_type1$Cover_Type <- as.factor(ifelse (tree_type1$Cover_Type=="1",1,0))
fun <- function(dataf){
glm1 <- glm(Cover_Type~., data=train, family="binomial")
probs <- predict(glm1, newdata=test)
pred <- ifelse(probs>0.5, 1, 0)
acc <- mean(pred==test$Cover_Type)
print(paste("accuracy = ", acc))
table(pred, test$Cover_Type)
}
fun(tree_type1)
df <- read.csv("covtype.csv")
df$Cover_Type <- factor(df$Cover_Type)
i <- sample(1:nrow(df), nrow(df)*.80, replace=FALSE)
train <- df[i,]
test <- df[-i,]
head(train)
tail(train)
median(train$class)
mode(train$cap.color)
str(train)
hist(train$Elevation)
hist(train$Soil_Type)
slices <- c(sum(train$Wilderness_Area1==1, na.rm=TRUE), sum(train$Wilderness_Area2==1, na.rm=TRUE), sum(train$Wilderness_Area3==1, na.rm=TRUE), sum(train$Wilderness_Area4==1, na.rm=TRUE))
labls <- c("Wilds 1","Wilds 2","Wilds 3","Wilds 4")
pie(slices,labels = labls, main="Types of Wild Area", col=c("green", "blue", "yellow", "red"))
tree_type1 <- df
tree_type1$Cover_Type <- as.factor(ifelse (tree_type1$Cover_Type=="1",1,0))
fun <- function(dataf){
glm1 <- glm(Cover_Type~., data=train, family="binomial")
probs <- predict(glm1, newdata=test)
pred <- ifelse(probs>0.5, 1, 0)
acc <- mean(pred==test$Cover_Type)
print(paste("accuracy = ", acc))
table(pred, test$Cover_Type)
}
fun(tree_type1)
#glm1 <- glm(Slope~Elevation, data=train, family=poisson())
#summary(glm1)
library(e1071)
nb1 <- naiveBayes(Slope~., data=train)
nb1
df <- read.csv("covtype.csv")
df$Cover_Type <- factor(df$Cover_Type)
i <- sample(1:nrow(df), nrow(df)*.80, replace=FALSE)
train <- df[i,]
test <- df[-i,]
head(train)
tail(train)
median(train$class)
mode(train$cap.color)
str(train)
hist(train$Elevation)
hist(train$Soil_Type)
slices <- c(sum(train$Wilderness_Area1==1, na.rm=TRUE), sum(train$Wilderness_Area2==1, na.rm=TRUE), sum(train$Wilderness_Area3==1, na.rm=TRUE), sum(train$Wilderness_Area4==1, na.rm=TRUE))
labls <- c("Wilds 1","Wilds 2","Wilds 3","Wilds 4")
pie(slices,labels = labls, main="Types of Wild Area", col=c("green", "blue", "yellow", "red"))
tree_type1 <- df
tree_type1$Cover_Type <- as.factor(ifelse (tree_type1$Cover_Type=="1",1,0))
fun <- function(dataf, i){
train <- dataf[i,]
test <- dataf[-i,]
glm1 <- glm(Cover_Type~., data=train, family="binomial")
probs <- predict(glm1, newdata=test)
pred <- ifelse(probs>0.5, 1, 0)
acc <- mean(pred==test$Cover_Type)
print(paste("accuracy = ", acc))
table(pred, test$Cover_Type)
}
fun(tree_type1, i)
#glm1 <- glm(Slope~Elevation, data=train, family=poisson())
#summary(glm1)
library(e1071)
nb1 <- naiveBayes(Slope~., data=train)
nb1
fun(tree_type1, i)
tree_type1 <- df
tree_type1$Cover_Type <- as.factor(ifelse (tree_type1$Cover_Type=="1",1,0))
tree_type2 <- df
tree_type2$Cover_Type <- as.factor(ifelse (tree_type2$Cover_Type=="2",1,0))
tree_type3 <- df
tree_type3$Cover_Type <- as.factor(ifelse (tree_type3$Cover_Type=="3",1,0))
tree_type4 <- df
tree_type4$Cover_Type <- as.factor(ifelse (tree_type4$Cover_Type=="4",1,0))
tree_type5 <- df
tree_type5$Cover_Type <- as.factor(ifelse (tree_type5$Cover_Type=="5",1,0))
tree_type6 <- df
tree_type6$Cover_Type <- as.factor(ifelse (tree_type6$Cover_Type=="6",1,0))
tree_type7 <- df
tree_type7$Cover_Type <- as.factor(ifelse (tree_type7$Cover_Type=="7",1,0))
fun <- function(dataf, i){
train <- dataf[i,]
test <- dataf[-i,]
glm1 <- glm(Cover_Type~., data=train, family="binomial")
probs <- predict(glm1, newdata=test)
pred <- ifelse(probs>0.5, 1, 0)
acc <- mean(pred==test$Cover_Type)
print(paste("accuracy = ", acc))
table(pred, test$Cover_Type)
}
fun(tree_type1, i)
fun(tree_type2, i)
fun(tree_type3, i)
fun(tree_type4, i)
fun(tree_type5, i)
fun(tree_type6, i)
fun(tree_type7, i)
#glm1 <- glm(Slope~Elevation, data=train, family=poisson())
#summary(glm1)
df <- read.csv("Air_Pollution.csv")
str(df)
df$PM2.5[is.na(df$PM2.5)] <- mean(df$PM2.5, na.rm=TRUE)
df$PM10[is.na(df$PM10)] <- mean(df$PM10, na.rm=TRUE)
df$NO2[is.na(df$NO2)] <- mean(df$NO2, na.rm=TRUE)
df$PM25.temporal.coverage[is.na(df$PM25.temporal.coverage)] <- mean(df$PM25.temporal.coverage, na.rm=TRUE)
df$PM10.temporal.coverage[is.na(df$PM10.temporal.coverage)] <- mean(df$PM10.temporal.coverage, na.rm=TRUE)
df$NO2.temporal.coverage[is.na(df$NO2.temporal.coverage)] <- mean(df$NO2.temporal.coverage, na.rm=TRUE)
str(df)
i <-sample(1:nrow(df), nrow(df)*0.80, replace=FALSE)
train <- df[i,]
test <- df[-i,]
head(train)
tail(train)
range(train$PM2.5, na.rm=FALSE)
range(train$PM10, na.rm=FALSE)
mean(train$PM2.5)
mean(train$PM10)
median(train$PM2.5)
median(train$PM10)
hist(train$PM2.5)
plot(train$NO2, train$Year)
plot(train$NO2, train$PM2.5)
plot(train$NO2, train$PM10)
lm1 <- lm(NO2~PM2.5, data=train)
summary(lm1)
plot(lm1)
lm2 <- lm(NO2~PM2.5+PM10, data=train)
summary(lm2)
plot(lm2)
lm3 <- lm(NO2~Year+PM2.5+PM10, data=train)
summary(lm3)
plot(lm3)
pred1 <- predict(lm1, newdata=test)
pred2 <- predict(lm2, newdata=test)
pred3 <- predict(lm3, newdata=test)
correlation1 <- cor(pred1, test$NO2)
print(paste("correlation: ", correlation1))
mse <- mean((pred1 - test$NO2)^2)
print(paste("mse: ", mse))
rmse <- sqrt(mse)
print(paste("rmse: ", rmse))
correlation2 <- cor(pred2, test$NO2)
print(paste("correlation: ", correlation2))
mse <- mean((pred2 - test$NO2)^2)
print(paste("mse: ", mse))
rmse <- sqrt(mse)
print(paste("rmse: ", rmse))
correlation3 <- cor(pred3, test$NO2)
print(paste("correlation: ", correlation1))
mse <- mean((pred3 - test$NO2)^2)
print(paste("mse: ", mse))
rmse <- sqrt(mse)
print(paste("rmse: ", rmse))
df <- read.csv("Air_Pollution.csv")
str(df)
df$PM2.5[is.na(df$PM2.5)] <- mean(df$PM2.5, na.rm=TRUE)
df$PM10[is.na(df$PM10)] <- mean(df$PM10, na.rm=TRUE)
df$NO2[is.na(df$NO2)] <- mean(df$NO2, na.rm=TRUE)
df$PM25.temporal.coverage[is.na(df$PM25.temporal.coverage)] <- mean(df$PM25.temporal.coverage, na.rm=TRUE)
df$PM10.temporal.coverage[is.na(df$PM10.temporal.coverage)] <- mean(df$PM10.temporal.coverage, na.rm=TRUE)
df$NO2.temporal.coverage[is.na(df$NO2.temporal.coverage)] <- mean(df$NO2.temporal.coverage, na.rm=TRUE)
str(df)
i <-sample(1:nrow(df), nrow(df)*0.80, replace=FALSE)
train <- df[i,]
test <- df[-i,]
head(train)
tail(train)
range(train$PM2.5, na.rm=FALSE)
range(train$PM10, na.rm=FALSE)
mean(train$PM2.5)
mean(train$PM10)
median(train$PM2.5)
median(train$PM10)
hist(train$PM2.5)
plot(train$NO2, train$Year)
plot(train$NO2, train$PM2.5)
plot(train$NO2, train$PM10)
lm1 <- lm(NO2~PM2.5, data=train)
summary(lm1)
plot(lm1)
lm2 <- lm(NO2~PM2.5+PM10, data=train)
summary(lm2)
plot(lm2)
lm3 <- lm(NO2~Year+PM2.5+PM10, data=train)
summary(lm3)
plot(lm3)
pred1 <- predict(lm1, newdata=test)
pred2 <- predict(lm2, newdata=test)
pred3 <- predict(lm3, newdata=test)
correlation1 <- cor(pred1, test$NO2)
print(paste("correlation: ", correlation1))
mse <- mean((pred1 - test$NO2)^2)
print(paste("mse: ", mse))
rmse <- sqrt(mse)
print(paste("rmse: ", rmse))
correlation2 <- cor(pred2, test$NO2)
print(paste("correlation: ", correlation2))
mse <- mean((pred2 - test$NO2)^2)
print(paste("mse: ", mse))
rmse <- sqrt(mse)
print(paste("rmse: ", rmse))
correlation3 <- cor(pred3, test$NO2)
print(paste("correlation: ", correlation1))
mse <- mean((pred3 - test$NO2)^2)
print(paste("mse: ", mse))
rmse <- sqrt(mse)
print(paste("rmse: ", rmse))
df$PM2.5[is.na(df$PM2.5)] <- mean(df$PM2.5, na.rm=TRUE)
df$PM10[is.na(df$PM10)] <- mean(df$PM10, na.rm=TRUE)
df$NO2[is.na(df$NO2)] <- mean(df$NO2, na.rm=TRUE)
df$PM25.temporal.coverage[is.na(df$PM25.temporal.coverage)] <-
mean(df$PM25.temporal.coverage, na.rm=TRUE)
df$PM10.temporal.coverage[is.na(df$PM10.temporal.coverage)] <-
mean(df$PM10.temporal.coverage, na.rm=TRUE)
df$NO2.temporal.coverage[is.na(df$NO2.temporal.coverage)] <-
mean(df$NO2.temporal.coverage, na.rm=TRUE)
str(df)
df <- read.csv("Air_Pollution.csv")
str(df)
df$PM2.5[is.na(df$PM2.5)] <- mean(df$PM2.5, na.rm=TRUE)
df$PM10[is.na(df$PM10)] <- mean(df$PM10, na.rm=TRUE)
df$NO2[is.na(df$NO2)] <- mean(df$NO2, na.rm=TRUE)
df$PM25.temporal.coverage[is.na(df$PM25.temporal.coverage)] <-
mean(df$PM25.temporal.coverage, na.rm=TRUE)
df$PM10.temporal.coverage[is.na(df$PM10.temporal.coverage)] <-
mean(df$PM10.temporal.coverage, na.rm=TRUE)
df$NO2.temporal.coverage[is.na(df$NO2.temporal.coverage)] <-
mean(df$NO2.temporal.coverage, na.rm=TRUE)
str(df)
i <-sample(1:nrow(df), nrow(df)*0.80, replace=FALSE)
train <- df[i,]
test <- df[-i,]
head(train)
tail(train)
range(train$PM2.5, na.rm=FALSE)
range(train$PM10, na.rm=FALSE)
mean(train$PM2.5)
mean(train$PM10)
median(train$PM2.5)
median(train$PM10)
hist(train$PM2.5)
plot(train$NO2, train$Year)
plot(train$NO2, train$PM2.5)
plot(train$NO2, train$PM10)
lm1 <- lm(NO2~PM2.5, data=train)
summary(lm1)
plot(lm1)
lm2 <- lm(NO2~PM2.5+PM10, data=train)
summary(lm2)
plot(lm2)
lm3 <- lm(NO2~Year+PM2.5+PM10, data=train)
summary(lm3)
plot(lm3)
pred1 <- predict(lm1, newdata=test)
pred2 <- predict(lm2, newdata=test)
pred3 <- predict(lm3, newdata=test)
correlation1 <- cor(pred1, test$NO2)
print(paste("correlation: ", correlation1))
mse <- mean((pred1 - test$NO2)^2)
print(paste("mse: ", mse))
rmse <- sqrt(mse)
print(paste("rmse: ", rmse))
correlation2 <- cor(pred2, test$NO2)
print(paste("correlation: ", correlation2))
mse <- mean((pred2 - test$NO2)^2)
print(paste("mse: ", mse))
rmse <- sqrt(mse)
print(paste("rmse: ", rmse))
correlation3 <- cor(pred3, test$NO2)
print(paste("correlation: ", correlation1))
mse <- mean((pred3 - test$NO2)^2)
print(paste("mse: ", mse))
rmse <- sqrt(mse)
print(paste("rmse: ", rmse))
